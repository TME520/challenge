minikube start
minikube addons enable metrics-server
minikube status

docker build -t ubuntubase .
docker build . -t ubuntubase
docker images

docker run -it ubuntubase

docker run -v ~/.minikube:/root/.minikube --add-host=kubernetes:<minikube-ip> candidate-image init d0x2f/http-hello-world:v1.0.0
docker run -v ~/.minikube:/root/.minikube --add-host=kubernetes:<minikube-ip> candidate-image upgrade d0x2f/http-hello-world:v2.0.0

docker run -v ~/.minikube:/root/.minikube --add-host=kubernetes:192.168.99.101 ubuntubase init d0x2f/http-hello-world:v1.0.0

# docker run -v <volume to bind/mount>
# Mount ~/.minikube (mac) as /root/.minikube (container)

# Add entries to container hosts file (--add-host)

# Run a command in a new container
# docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
docker run -v ~/.minikube:/root/.minikube --add-host=kubernetes:192.168.99.101 ubuntubase init
docker run -v ~/.minikube:/root/.minikube --add-host=kubernetes:192.168.99.101 ubuntubase init d0x2f/http-hello-world:v1.0.0
docker run -v ~/.minikube:/root/.minikube --add-host=kubernetes:192.168.99.101 ubuntubase upgrade d0x2f/http-hello-world:v2.0.0

docker run -p 8080:8080 -d d0x2f/http-hello-world:v1.0.0
curl 127.0.0.1:8080
docker stop 26e69719c7d4

kubectl run hello-world --port=8080 --image=d0x2f/http-hello-world:v1.0.0 --generator=run-pod/v1
kubectl get pods
minikube dashboard ### Wait for a while, dashboard opens in browser

kubectl apply -f ./deployment.yaml
kubectl autoscale deployment hello-world-deployment --min=2 --max=4 --cpu-percent=60
kubectl delete deployment hello-world
kubectl delete service hello-world
===
Minikube can't expose apps on type LoadBalancer, have to use NodePort.
===
kubectl run hello-world --image=d0x2f/http-hello-world:v1.0.0 --replicas=2 --requests=cpu=200m --expose --port=30101
kubectl get deploy -o wide
kubectl get pods -o wide
OR: kubectl apply -f ./deployment.yaml
kubectl autoscale deployment hello-world --cpu-percent=60 --min=2 --max=4
kubectl port-forward deployment/hello-world 8080:30101
kubectl run -i --tty load-generator --image=busybox /bin/sh
while true; do wget -q -O- http://hello-world.default.svc.cluster.local; done
kubectl get deployment hello-world
kubectl get rs
kubectl get hpa
kubectl delete deployment load-generator
kubectl get deployment hello-world
kubectl get rs
===
===
kubectl run my-httpd --image=httpd --replicas=1 --port=80
kubectl get deploy -o wide
kubectl get pods -o wide
minikube ssh
curl 172.17.0.2
kubectl expose deployment my-httpd --port=8080 --target-port=80 --type=LoadBalancer
kubectl get svc
minikube ssh
curl http://minikube:31210
===
===
kubectl run my-httpd --image=httpd --replicas=1 --port=80
kubectl expose deployment my-httpd --port=8080 --target-port=80 --type=NodePort
minikube ip
minikube service my-httpd
kubectl delete deployment,svc my-httpd
===
===
minikube service my-httpd --url
===
===
FULL RUN
--- init ---
kubectl run hello-world --image=d0x2f/http-hello-world:v1.0.0 --replicas=2 --requests=cpu=200m --expose --port=30101
kubectl autoscale deployment hello-world --min=2 --max=4 --cpu-percent=60
--- *** ---
--- test 1 ---
kubectl get pods -o wide
minikube ssh
curl http://xxx.xxx.xxx.xxx:8080
--- *** ---
--- upgrade ---
kubectl set image deployment hello-world hello-world=d0x2f/http-hello-world:v2.0.0
--- *** ---
--- test 2 ---
kubectl get pods -o wide
minikube ssh
curl http://xxx.xxx.xxx.xxx:8080
--- *** ---
--- exit ---
kubectl delete deployment,svc hello-world
kubectl delete horizontalpodautoscalers.autoscaling hello-world
===
===
kubectl apply -f ./hello-world-deployment.yaml
kubectl apply -f ./hello-world-service.yaml
kubectl autoscale deployment hello-world-deployment --min=2 --max=4 --cpu-percent=60
kubectl get deploy -o wide
kubectl get svc -o wide
kubectl get pod -o wide
minikube ssh
curl http://xxx.xxx.xxx.xxx:8080
kubectl set image deployment hello-world-deployment hello-world=d0x2f/http-hello-world:v2.0.0
kubectl get pods -o wide
minikube ssh
curl http://xxx.xxx.xxx.xxx:8080
kubectl delete svc hello-world
kubectl delete deployment hello-world-deployment
kubectl delete horizontalpodautoscalers.autoscaling hello-world-deployment
